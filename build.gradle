plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'java-library'
}

group = 'top.terry-mc'
version = '0.1.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT"
    api "com.squareup.okhttp3:okhttp:4.12.0"
    compileOnly 'com.zaxxer:HikariCP:7.0.1'
    compileOnly "com.h2database:h2:2.3.232"
    compileOnly "org.xerial:sqlite-jdbc:3.50.3.0"
    compileOnly "mysql:mysql-connector-java:8.0.33"
    compileOnly "org.mariadb.jdbc:mariadb-java-client:3.5.5"
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.18")
    }
}

def targetJavaVersion = 11
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
